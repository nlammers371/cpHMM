#------------------------------------Routine Variable Definitions------------------------------------------------------#
#Nax number of iterations permitted
max_iter=1000
# Seconds per time step
dt = 10.2
n_inf = 300
# set num cores to use
num_inf_cores = 16 #multiprocessing.cpu_count()
# Set number of initialization routines
#n_init = 1
# set num cores to use
#num_init_cores = multiprocessing.cpu_count()
#Max num permitted paths in stack
max_stack = 100
#Estimate noise
estimate_noise = 1
#-------------------------------------"True" Variable Definitions------------------------------------------------------#
# noise
sigma = 25
# memory
w = 15
# Fix trace length for now
T = 200
#Num states
K = 3
# Number of traces per batch
batch_size = 100
# Set transition rate matrix for system
if K == 3:
    R = np.array([[-.004, .009, .005], [.003, -.014, .015], [.001, .005, -.02]]) * dt

elif K == 2:
    R = np.array([[-.004, .014], [.004, -.014]]) * dt

#A = scipy.linalg.expm(R, q=None)
#print(A)
# Set emission levels
if K == 3:
    v = np.array([0.0, 25.0, 50.0])
elif K == 2:
    v = np.array([0.0,25.0])

# Initial stat pdf
if K == 3:
    pi = [.8,.1,.1]
elif K == 2:
    pi = [.8, .2]

#------------------------------------------Inference Init Variables----------------------------------------------------#
if K == 3:
    v_prior = np.array([   0,   24.0,  51.0])
    A_prior = np.array([[ .8,   .1,   .1],
                    [ .1,   .8,   .1],
                    [ .1,   .1,   .8]])
elif K == 2:
    v_prior = [0,35]
    A_prior = np.array([[.8, .2],
                        [.2, .8]])
sigma_prior = 26.0
